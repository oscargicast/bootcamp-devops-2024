apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mongo
  template:
    metadata:
      labels:
        name: mongo
    spec:
      containers:
      - image: mongo:4.0.3
        name: mongo
        args: ["--auth"]
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        env:
        - name: MONGODB_ADMIN_PASSWORD
          value: clyde
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-users-secret
              key: MONGO_INITDB_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-users-secret
              key: MONGO_INITDB_ROOT_PASSWORD
        - name: MONGODB_DATABASE
          valueFrom:
            secretKeyRef:
              name: mongodb-users-secret
              key: MONGODB_DATABASE      
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MONGODB_PASSWORD
              name: mongodb-users-secret
        - name: MONGODB_USER
          valueFrom:
            secretKeyRef:
              key: MONGODB_USER
              name: mongodb-users-secret
        ports:
        - name: mongo
          containerPort: 27017
        volumeMounts:
          - name: mongo-db
            mountPath: /data/db
          - name : init-script
            mountPath: /docker-entrypoint-initdb.d
            readOnly: true
      volumes:
        - name: mongo-db
          persistentVolumeClaim:
            claimName: mongo-storage
        - name: init-script
          configMap:
             name: mongo-init-script-configmap
             items:
              - key: mongo-init.sh
                path: mongo-init.sh


